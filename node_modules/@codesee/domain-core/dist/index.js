"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var classTransformer=require("class-transformer"),path=require("path"),textEncoding=require("text-encoding"),sharedConstants=require("@codesee/shared-constants"),uuid=require("uuid"),minimatch=require("minimatch");function _interopNamespace(r){if(r&&r.__esModule)return r;var o=Object.create(null);return r&&Object.keys(r).forEach(function(e){var t;"default"!==e&&(t=Object.getOwnPropertyDescriptor(r,e),Object.defineProperty(o,e,t.get?t:{enumerable:!0,get:function(){return r[e]}}))}),o.default=r,Object.freeze(o)}var path__namespace=_interopNamespace(path);function __decorate(e,t,r,o){var n,i=arguments.length,s=i<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;0<=a;a--)(n=e[a])&&(s=(i<3?n(s):3<i?n(t,r,s):n(t,r))||s);return 3<i&&s&&Object.defineProperty(t,r,s),s}function __metadata(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)}function versionMeetsOrExceedsMinimum(e,t){return void 0!==e&&Number(e)>=t}function sortNodes(e){return e.sort((e,t)=>e.key.localeCompare(t.key))}function sortLinks(e){return e.sort((e,t)=>{var r=e.from.localeCompare(t.from);return 0!==r?r:e.to.localeCompare(t.to)})}function sortPackageNamePaths(e){return e.sort((e,t)=>{const[r,o]=e;var[e,t]=t,t=o.localeCompare(t);return 0!==t?t:r.localeCompare(e)})}exports.AlertType=void 0,(exports.AlertType||(exports.AlertType={})).TourConflict="tour-conflict";const detectLinkDuplication=r=>({to:e,from:t})=>{t=`${e}|${t}`;return!r.has(t)&&(r.add(t),!0)};class ArchDiagram{constructor(){this.nodes=[],this.links=[],this.tours=[],this.version="",this.commitHash=""}applyChanges(e,t){let r=this.removeNodesForChanges(e,t.removes);return r=this.renameNodesForChanges(e,t.renames)||r,r=this.copyFilesForChanges(e,t.copies)||r,r=this.addNodesForChanges(e,t.adds)||r,r}eliminateInvalidLinks(e){const t=new Set(this.nodes.map(e=>e.key));e.forEach(e=>t.add(e));e=this.links.length;return this.links=this.links.filter(e=>t.has(e.to)&&t.has(e.from)),e!==this.links.length}eliminateDuplicateLinks(){var e=new Set,t=this.links.length;return this.links=this.links.filter(detectLinkDuplication(e)),t!==this.links.length}removeEmptyGroups(){const e=this.nodes.filter(e=>e.isGroup),t=new Set(e.map(t=>{if(t.labelCounts){let e=0;for(const r in t.labelCounts)e+=t.labelCounts[r];return 0===e?t.key:void 0}}).filter(e=>e));this.nodes=this.nodes.filter(e=>!t.has(e.key))}checkToursForConflicts(r,o){const n=new Map;this.nodes.forEach(e=>{n.set(e.key,e)}),this.tours&&this.getTourIter().forEach(e=>{e.steps.forEach(e=>{var t=n.get(e.nodeKey);t?nodeIsVisible(t,n)||(e.conflict={type:"moved",commitSHA:r,commitURL:o,timestamp:Date.now()}):e.conflict={type:"deleted",commitSHA:r,commitURL:o,timestamp:Date.now()}})})}getTourIter(){return this.tours instanceof Array?this.tours:Object.values(this.tours)}addNodesForChanges(e,t){var r;if(0===t.length)return!1;null!==(r=null==e?void 0:e.info)&&void 0!==r&&r.call(e,`Would Add ${t.length} nodes`);const o=new Set(this.nodes.map(e=>e.key));return t.forEach(e=>{o.has(e)||(this.nodes.push({key:e,name:path__namespace.basename(e)}),o.add(e))}),!0}removeNodesForChanges(e,t){var r;return 0!==t.length&&(null!==(r=null==e?void 0:e.info)&&void 0!==r&&r.call(e,`Would Remove ${t.length} of ${this.nodes.length} nodes with ${this.links.length} links`),t.forEach(e=>{this.removeNode(e)}),null!==(t=null==e?void 0:e.warn)&&void 0!==t&&t.call(e,`${this.nodes.length} nodes left after deleting, and ${this.links.length} links`),!0)}renameNodesForChanges(n,e){let i=!1;const s=new Map;return this.nodes.forEach(e=>{s.set(e.key,e)}),e.forEach(({to:e,from:t})=>{var r;if(!s.has(e)){const o=s.get(t);o&&(r=o.group,dirnameOrUndefined(e)!==r&&(delete o.x,delete o.y,o.group=void 0,null!==(r=null==n?void 0:n.warn)&&void 0!==r&&r.call(n,"\tunsetting location because it changed groups")),o.key=e,o.name=path__namespace.basename(e),i=!0,s.delete(t),s.set(e,o))}}),this.tours&&e.forEach(({to:t,from:r})=>{this.getTourIter().forEach(e=>{e.steps.forEach(e=>{e.nodeKey===r&&(e.nodeKey=t,i=!0)})})}),i}copyFilesForChanges(e,t){let n=!1;const i=new Set(this.nodes.map(e=>e.key));return t.forEach(({to:r,from:o})=>{i.has(r)||this.nodes.forEach(e=>{if(e.key===o){const t=Object.assign(Object.assign({},e),{key:r,name:path__namespace.basename(r)});delete t.x,delete t.y,this.nodes.push(t),n=!0,i.add(r)}})}),n}removeNode(t){var e=this.nodes.findIndex(e=>"string"==typeof e&&e===t||"object"==typeof e&&e.key===t);-1<e&&this.nodes.splice(e,1)}assignGroups(){this.nodes.filter(e=>!e.isGroup&&void 0===e.group).forEach(e=>{e.group=dirnameOrUndefined(e.key)})}generateMissingGroups(){let e=!1;this.assignGroups();const t=new Set(this.nodes.map(e=>e.group)),r=new Set(this.nodes.map(e=>e.key)),o=Array.from(t.values());for(;0<o.length;){var n,i,s=o.pop();s&&(r.has(s)||(n=dirnameOrUndefined(s),i={key:s,name:path__namespace.basename(s)+"/",isGroup:!0,group:n,isSubGraphExpanded:!1},this.nodes.push(i),e=!0,r.add(s),t.has(n)||o.push(n)))}return e}updateGroupLabelCounts(){var e=this.nodes.map((e,t)=>{if(e.isGroup)return[e.key,t]}).filter(e=>void 0!==e);const s=new Map(e),t=this.nodes.map(e=>[e.key,e.group,e.labelKey,e.isGroup||!1]),r=t.filter(e=>!0===e[3]),a=new Map(r.map(e=>[e[0],{}]));t.filter(e=>!1===e[3]).forEach(([,e,t])=>{const r=a.get(e);r&&(t=t||"0",void 0===r[t]&&(r[t]=0),r[t]++,a.set(e,r))});const o=Array.from(a.keys());o.sort((e,t)=>e.length-t.length),o.forEach(t=>{var r=a.get(t),t=s.get(t);if(void 0!==t){const n=this.nodes[t];n.labelCounts=r;let e=n.group;for(;void 0!==e;){var o=s.get(e);if(void 0===o)break;const i=this.nodes[o];if(void 0===i)break;if(i.labelCounts=combineLabelCounts(i.labelCounts,r),i.group===e)break;e=i.group}}})}}function combineLabelCounts(e,t){if(!e)return t||{};if(!t)return e||{};const r={};for(const o in e)void 0===r[o]&&(r[o]=0),r[o]+=e[o];for(const n in t)void 0===r[n]&&(r[n]=0),r[n]+=t[n];return r}function linkToKey({to:e,from:t}){return`${e}|${t}`}function computeFullDependencyMapFromIncrementalDependencyMap(e,t){let r={},o={};versionMeetsOrExceedsMinimum(t.version,3)&&(r=t.linkLanguages),versionMeetsOrExceedsMinimum(t.version,4)&&(o=t.packageNamePathLanguages);let n={};versionMeetsOrExceedsMinimum(e.version,4)&&(n=e.packageNamePathLanguages);const i={version:"4",mode:"computed-full",linkLanguages:Object.assign(Object.assign({},r),e.linkLanguages),packageNamePathLanguages:Object.assign(Object.assign({},o),n),commitHash:e.commitHash,previousDependencyMapCommit:e.previousDependencyMapCommit,fileChangeSet:e.fileChangeSet,nodes:[],links:[],packageNamePaths:[]},s=parseFileChangeSet(e.fileChangeSet),a=new Set(s.adds),l=new Set(s.removes);s.renames.forEach(({from:e,to:t})=>{a.add(t),l.add(e)}),s.copies.forEach(({to:e})=>{a.add(e)});const p=new Set(s.modifications),c=new Set;t.nodes.forEach(e=>{l.has(e.key)||(c.add(e.key),i.nodes.push(e))}),e.nodes.forEach(e=>{c.has(e.key)||i.nodes.push(e)}),i.nodes=filterEmptyGroups(i.nodes);const d=new Set;for(const m of t.links){var{from:u,to:g}=m;l.has(u)||l.has(g)||p.has(u)||(i.links.push(m),d.add(linkToKey(m)))}e.links.forEach(e=>{var t=linkToKey(e);d.has(t)||(d.add(t),i.links.push(e))});t=(null==t?void 0:t.packageNamePaths)||[];let T=[];versionMeetsOrExceedsMinimum(e.version,4)&&(T=e.packageNamePaths||[]);const E=new Map([...t,...T]);for(const _ of l)E.delete(_);return i.packageNamePaths=[...E],i}function filterEmptyGroups(e){const t=new Map(e.filter(e=>e.isGroup).map(e=>[e.key,!1]));for(const n of e.filter(e=>!e.isGroup)){const i=n.group;if(i){const s=i.split("/");for(let e=0;e<s.length;e++){var r=s.slice(0,e+1).join("/");t.set(r,!0)}}}const o=new Set(Array.from(t.entries()).filter(([,e])=>!e).map(([e])=>e));return e.filter(e=>!o.has(e.key))}function parseFileChangeSet(e){const i={adds:[],removes:[],modifications:[],renames:[],copies:[],linkAdds:[],linkRemoves:[]};return e.split("\n").map(e=>{var t=e.indexOf("\t");const r=e.substring(0,t);var o=e.substring(t+1),t=r.lastIndexOf(" "),n=r.substring(t+1)[0];switch(n){case"C":case"R":processMigration(n,i,o);break;case"A":i.adds.push(normalizeFilename(o));break;case"D":i.removes.push(normalizeFilename(o));break;case"M":i.modifications.push(normalizeFilename(o))}}),i}function processMigration(e,t,r){r=r.split("\t",2);if(2===r.length){var o={from:normalizeFilename(r[0]),to:normalizeFilename(r[1])};switch(e){case"C":t.copies.push(o);break;case"R":t.renames.push(o)}}}function normalizeFilename(e){return e.replace(/^"/g,"").replace(/"$/g,"").replace(/(\\\d\d\d)+/g,e=>{const t=e.split(/(\\\d\d\d)/g).filter(e=>e);e=t.map(e=>{e=e.replace(/^\\/g,"");return parseInt(e,8)});return new textEncoding.TextDecoder("utf-8").decode(new Uint8Array(e))}).replace(/\\"/g,'"').replace(/\\a/g,"").replace(/\\b/g,"\b").replace(/\\t/g,"\t").replace(/\\n/g,"\n").replace(/\\v/g,"\v").replace(/\\f/g,"\f").replace(/\\r/g,"\r").replace(/\\\\/g,"\\")}function dirnameOrUndefined(e){e=path__namespace.dirname(e);if("."!==e&&"/"!==e)return e}function nodeIsVisible(e,t){if(e.hidden)return!1;if(!e.group)return!0;e=t.get(e.group);return!!e&&groupIsVisibleAndExpanded(e,t)}function groupIsVisibleAndExpanded(e,t){if(e.hidden)return!1;if(!e.isSubGraphExpanded&&!e.expanded)return!1;if(!e.group)return!0;e=t.get(e.group);return!!e&&groupIsVisibleAndExpanded(e,t)}function getSerializedLabelKey(e,t){if(!t&&e!==sharedConstants.DEFAULT_GOJS_LABEL_KEY)return e}function getDeserializedLabelKey(e,t){if(!t)return null!=e?e:sharedConstants.DEFAULT_GOJS_LABEL_KEY}function getDeserializedTours(e){if(e instanceof Array){const t=e.map(e=>(void 0===e.id&&(e.id=generateTourId()),[e.id,e])),r={};return t.forEach(([e,t])=>r[e]=t),r}return e}function getSerializedTours(e){const t=getTourIter(e).map(([e,t])=>[e=e instanceof Number?generateTourId():e,{id:e,name:t.name,steps:t.steps.map(e=>({id:e.id,message:e.message,nodeKey:e.nodeKey,conflict:e.conflict}))}]),r={};return t.forEach(([e,t])=>r[e]=t),r}__decorate([classTransformer.Expose(),__metadata("design:type",Array)],ArchDiagram.prototype,"nodes",void 0),__decorate([classTransformer.Expose(),__metadata("design:type",Array)],ArchDiagram.prototype,"links",void 0),__decorate([classTransformer.Expose(),__metadata("design:type",Object)],ArchDiagram.prototype,"tours",void 0),__decorate([classTransformer.Expose(),__metadata("design:type",String)],ArchDiagram.prototype,"version",void 0),__decorate([classTransformer.Expose(),__metadata("design:type",String)],ArchDiagram.prototype,"commitHash",void 0);class ArchDiagramServerAdaptor{static toServerObject(e,t,r,o){return{nodes:e.map(e=>({key:e.key,name:e.name,group:e.group,package:e.packageName,x:e.x,y:e.y,isGroup:e.isGroup,expanded:e.expanded,labelKey:getSerializedLabelKey(e.labelKey,e.isGroup),labelCounts:e.labelCounts,note:e.note,hidden:e.hidden})),links:t.map(e=>({from:e.from,to:e.to})),labels:r,tours:getSerializedTours(o)}}static nodeKeysToNodes(e){return[...e.map(ArchDiagramServerAdaptor._nodeKeyToNode),...ArchDiagramServerAdaptor._generateParentGroups(e)]}static _nodeKeyToNode(e){return{key:e,name:path__namespace.basename(e),labelKey:sharedConstants.DEFAULT_GOJS_LABEL_KEY,group:dirnameOrUndefined(e)}}static _generateParentGroups(e){const r=new Set,t=[];return e.forEach(e=>{let t=dirnameOrUndefined(e);for(;t&&(r.add(t),"/"!==t);)t=dirnameOrUndefined(t)}),r.forEach(e=>{t.push({key:e,name:path__namespace.basename(e)+"/",group:dirnameOrUndefined(e),isGroup:!0,isSubGraphExpanded:!1})}),t}static fromServerObject(e){return{nodeData:e.nodes.map(e=>{if("object"!=typeof e)throw new Error("fromServerObject called on blob with non-object nodes");{const o=e;var t,r;return"string"==typeof(null===o||void 0===o?void 0:o.loc)&&([t,r]=o.loc.split(" ",2),t=Number.parseFloat(t),r=Number.parseFloat(r),Number.isNaN(t)||Number.isNaN(r)||(e.x=t,e.y=r)),{key:e.key,name:e.name||path__namespace.basename(e.key),group:e.group||dirnameOrUndefined(e.key),packageName:e.packageName,isGroup:e.isGroup,expanded:e.isGroup?e.expanded||!1:void 0,labelKey:getDeserializedLabelKey(e.labelKey,e.isGroup),labelCounts:e.labelCounts,note:e.note,hidden:e.hidden,x:e.x,y:e.y}}}),linkData:e.links.map(e=>({from:e.from,to:e.to})),labelData:e.labels||[],tourData:getDeserializedTours(e.tours||{})}}}exports.BillingPlan=void 0,function(e){e.Free="Free",e.Team="Team",e.Business="Business",e.Enterprise="Enterprise"}(exports.BillingPlan||(exports.BillingPlan={})),exports.DeploymentType=void 0,function(e){e.GithubActions="github-actions",e.CodeSeeHostedCliRunner="codesee-hosted-cli-runner",e.SelfHostedCliRunner="self-hosted-cli-runner"}(exports.DeploymentType||(exports.DeploymentType={})),exports.FeatureName=void 0,function(e){e.Collaborators="Collaborators",e.NodeComments="NodeComments",e.Subscription="Subscription",e.AllowedDomains="Allowed Domains",e.Triggers="Triggers",e.RestrictPublicMaps="RestrictPublicMaps",e.SelfServiceBillingUpgrade="SelfServiceBillingUpgrade",e.AllowSsoRequired="AllowSsoRequired",e.ServiceMaps="ServiceMaps"}(exports.FeatureName||(exports.FeatureName={}));const features={[exports.FeatureName.NodeComments]:{description:"Allows comment threads on nodes of Code Maps",defaultActiveForPlans:[exports.BillingPlan.Team,exports.BillingPlan.Business,exports.BillingPlan.Enterprise]},[exports.FeatureName.Collaborators]:{description:"Allows users to be assigned the Collaborator role",defaultActiveForPlans:[exports.BillingPlan.Team,exports.BillingPlan.Business,exports.BillingPlan.Enterprise]},[exports.FeatureName.Subscription]:{description:"Is a paid plan that goes thru the subscription billing flow",defaultActiveForPlans:[exports.BillingPlan.Business,exports.BillingPlan.Enterprise]},[exports.FeatureName.AllowedDomains]:{description:"Allows for an email domain list to be specified which restricts account invites users with those emails",defaultActiveForPlans:[exports.BillingPlan.Business,exports.BillingPlan.Enterprise]},[exports.FeatureName.RestrictPublicMaps]:{description:"Allows admin to restrict the sharing of public maps account wide",defaultActiveForPlans:[exports.BillingPlan.Business,exports.BillingPlan.Enterprise]},[exports.FeatureName.AllowSsoRequired]:{description:"Team members must authenticate using SSO",defaultActiveForPlans:[exports.BillingPlan.Business,exports.BillingPlan.Enterprise]},[exports.FeatureName.Triggers]:{description:"Allow users to create triggers on this account",defaultActiveForPlans:[exports.BillingPlan.Business,exports.BillingPlan.Enterprise]},[exports.FeatureName.SelfServiceBillingUpgrade]:{description:"Billings plan that may be upgraded through self service checkout",defaultActiveForPlans:[exports.BillingPlan.Team,exports.BillingPlan.Business]},[exports.FeatureName.ServiceMaps]:{description:"Visualize connections between services",defaultActiveForPlans:[exports.BillingPlan.Enterprise]}};function isFeatureOnPlan(e,t){return!!t&&plansWithFeature(e).includes(t)}function hasSecurityFeatures(e){return isFeatureOnPlan(exports.FeatureName.AllowSsoRequired,e)&&isFeatureOnPlan(exports.FeatureName.AllowedDomains,e)&&isFeatureOnPlan(exports.FeatureName.RestrictPublicMaps,e)}function plansWithFeature(e){return features[e].defaultActiveForPlans}const DefaultTotalSeatsForPlan={[exports.BillingPlan.Free]:1,[exports.BillingPlan.Team]:3,[exports.BillingPlan.Business]:0,[exports.BillingPlan.Enterprise]:0},BillingPlanUnlimitedSeats=5e5,MaxTotalSeatsForPlan={[exports.BillingPlan.Free]:1,[exports.BillingPlan.Team]:3,[exports.BillingPlan.Business]:10,[exports.BillingPlan.Enterprise]:BillingPlanUnlimitedSeats},EARLY_ADOPTER_PROVISIONED_SEATS=1009,MICROSOFT_STARTUPS_PROVISIONED_SEATS=1013,UNLIMITED_AMOUNT_OF_TRIGGERS=-1,MAX_TRIGGERS_PER_REPO_FOR_PLAN={[exports.BillingPlan.Free]:0,[exports.BillingPlan.Team]:0,[exports.BillingPlan.Business]:1,[exports.BillingPlan.Enterprise]:UNLIMITED_AMOUNT_OF_TRIGGERS};function getMaxAmountOfTriggersForPlan(e){return MAX_TRIGGERS_PER_REPO_FOR_PLAN[e]}const dontIncludeContextNodesFor=new Set(["https://github.com/murmurlabs/murmur|apps/webapp/graphql/generated/index.ts"]);function mergeChangeSetAndDependencyMap(r,e,t){const o=new Map,n=new Map,s=new Map,a=new Map,l=new Map;let i=[];e.links.forEach(e=>{var t=`${e.from}-${e.to}`;n.set(t,e)}),r.linkAdds.forEach(e=>{var t=`${e.from}-${e.to}`;s.set(t,e)}),r.linkRemoves.forEach(e=>{var t=`${e.from}-${e.to}`;a.set(t,e)}),r.renames.forEach(e=>{l.set(e.to,e)}),n.forEach(e=>{var t,r,o,n,i;l.has(e.to)&&l.has(e.from)?(t=l.get(e.from),o=l.get(e.to),r=null==t?void 0:t.from,t=null==t?void 0:t.to,r=`${r}-${null==o?void 0:o.from}`,o=`${t}-${null==o?void 0:o.to}`,a.has(r)&&(a.delete(r),s.delete(o))):l.has(e.from)?(i=null==(n=l.get(e.from))?void 0:n.from,n=null==n?void 0:n.to,i=`${i}-${e.to}`,n=`${n}-${e.to}`,a.has(i)&&(a.delete(i),s.delete(n))):l.has(e.to)&&(n=null==(i=l.get(e.to))?void 0:i.from,i=null==i?void 0:i.to,n=`${e.from}-${n}`,i=`${e.from}-${i}`,a.has(n)&&(a.delete(n),s.delete(i)))}),a.forEach((e,t)=>{const r=e;r.changeType="removes",n.set(t,r)}),s.forEach((e,t)=>{const r=e;r.changeType="adds",n.set(t,r)});const p=Array.from(n.values());if(void 0===e.nodes&&(e.nodes=[]),r.renames.forEach(({from:e,to:t})=>{r.removes.push(e),r.adds.push(t)}),e.nodes=[...e.nodes,...ArchDiagramServerAdaptor.nodeKeysToNodes(r.removes)],0!==e.nodes.length){const u=ArchDiagramServerAdaptor.fromServerObject(e)["nodeData"];u.forEach(e=>{o.set(e.key,e)}),r.adds.forEach(e=>{const t=o.get(e);t&&(t.changeType="adds",i.push(t),o.delete(e))}),r.modifications.forEach(e=>{const t=o.get(e);t&&(t.changeType="modifications",i.push(t),o.delete(e))}),r.removes.forEach(e=>{const t=o.get(e);t&&(t.changeType="removes",i.push(t),o.delete(e))}),r.copies.forEach(({to:e})=>{const t=o.get(e);t&&(t.changeType="adds",i.push(t),o.delete(e))});const g=[];if(i.forEach(r=>{dontIncludeContextNodesFor.has(`${t}|${r.key}`)||p.forEach(e=>{var t;e.to===r.key?(t=o.get(e.from))&&(g.push(t),o.delete(e.from)):e.from!==r.key||!e.changeType||(t=o.get(e.to))&&(g.push(t),o.delete(e.to))})}),i=[...i,...g],0!==i.length){for(let e=0;e<i.length;e++){var c,d=i[e].group;!d||(c=o.get(d))&&(i.push(c),o.delete(d))}const T=new Set(i.map(e=>e.key));e=p.filter(e=>T.has(e.to)&&T.has(e.from));return{nodes:i,links:e}}}}function getLinksDiff(e,t){const r=new Map,o=[];e.forEach(e=>{r.set(`${e.from}-${e.to}`,e)}),t.forEach(e=>{var t=`${e.from}-${e.to}`;r.has(t)?r.delete(t):o.push(e)});t=Array.from(r.values());return{linkAdds:o,linkRemoves:t}}const getDiagramDataFromChangeSetAndDependencyMap=(e,t,r,o)=>{const n=parseFileChangeSet(e);return o&&({linkAdds:e,linkRemoves:o}=getLinksDiff(o.links,r.links),n.linkAdds=e,n.linkRemoves=o),mergeChangeSetAndDependencyMap(n,r,t)};exports.GitHubPullRequestReviewCommentState=void 0,function(e){e.Pending="PENDING",e.Submitted="SUBMITTED"}(exports.GitHubPullRequestReviewCommentState||(exports.GitHubPullRequestReviewCommentState={})),exports.GitHubCodeReviewCommentSide=void 0,function(e){e.Left="LEFT",e.Right="RIGHT"}(exports.GitHubCodeReviewCommentSide||(exports.GitHubCodeReviewCommentSide={})),exports.GitHubPullRequestReviewState=void 0,function(e){e.Commented="COMMENTED",e.Approved="APPROVED",e.Pending="PENDING",e.ChangedRequested="CHANGES_REQUESTED",e.Dismissed="DISMISSED"}(exports.GitHubPullRequestReviewState||(exports.GitHubPullRequestReviewState={})),exports.GitHubPullRequestReviewEvent=void 0,function(e){e.Comment="COMMENT",e.Approve="APPROVE",e.RequestChanges="REQUEST_CHANGES",e.Dismiss="DISMISS"}(exports.GitHubPullRequestReviewEvent||(exports.GitHubPullRequestReviewEvent={})),exports.GitHubFileStatus=void 0,function(e){e.Added="added",e.Modified="modified",e.Renamed="renamed",e.Removed="removed",e.Unchanged="unchanged"}(exports.GitHubFileStatus||(exports.GitHubFileStatus={})),exports.SubscriptionSessionTypes=void 0,function(e){e.Checkout="create-checkout-session",e.Manage="create-customer-portal-session"}(exports.SubscriptionSessionTypes||(exports.SubscriptionSessionTypes={})),exports.SubscriptionStatus=void 0,function(e){e.Active="active",e.PastDue="past_due",e.Unpaid="unpaid",e.Canceled="canceled",e.Incomplete="incomplete",e.IncompleteExpired="incomplete_expired",e.Trialing="trialing"}(exports.SubscriptionStatus||(exports.SubscriptionStatus={}));const SubscriptionStatusGoodStanding=new Set([exports.SubscriptionStatus.Active,exports.SubscriptionStatus.Trialing]),SubscriptionStatusNeedsAttention=new Set([exports.SubscriptionStatus.PastDue,exports.SubscriptionStatus.Unpaid,exports.SubscriptionStatus.Canceled,exports.SubscriptionStatus.Incomplete,exports.SubscriptionStatus.IncompleteExpired]);exports.InviteValidationStatus=void 0,function(e){e[e.Success=200]="Success",e[e.NoInviteFound=404]="NoInviteFound",e[e.Expired=410]="Expired",e[e.EmailNotAMatch=403]="EmailNotAMatch"}(exports.InviteValidationStatus||(exports.InviteValidationStatus={})),exports.ReviewMapTourStepKind=void 0,function(e){e.GithubReviewComment="GitHubReviewComment",e.FileComment="FileComment"}(exports.ReviewMapTourStepKind||(exports.ReviewMapTourStepKind={})),exports.NotificationLevel=void 0,function(e){e.Parent="parent",e.Child="child",e.Grandchild="grandchild"}(exports.NotificationLevel||(exports.NotificationLevel={})),exports.NotificationKind=void 0,(exports.NotificationKind||(exports.NotificationKind={})).NodeComment="node_comment",exports.TriggerConditionField=void 0,function(e){e.FileContents="file contents",e.FileName="file name",e.FileAddedInFolder="file added in folder",e.FilePath="file path"}(exports.TriggerConditionField||(exports.TriggerConditionField={})),exports.TriggerConditionOperator=void 0,function(e){e.Equals="equals",e.Contains="contains",e.MatchesGlob="matches glob",e.StartsWith="starts with",e.EndsWith="ends with"}(exports.TriggerConditionOperator||(exports.TriggerConditionOperator={})),exports.TriggerActionKind=void 0,function(e){e.AddToChecklist="add to checklist",e.AddReviewer="add reviewer",e.AddAssignee="add assignee",e.AddComment="add comment"}(exports.TriggerActionKind||(exports.TriggerActionKind={}));const FileChangeType=exports.GitHubFileStatus,MALFORMED_REQUEST={success:!1,status:400,message:"Malformed request"};function getTourFromCollection(e,t){return e instanceof Array?e[+t]:e[t]}function generateTourId(){return uuid.v4()}function addToursToCollection(r,e){if(r instanceof Array)throw new Error("Tours should have been updated to a map by now");let o="0";return getTourIter(e).forEach(([e,t])=>{e!==(t=void 0===t.id||"0"===t.id||""===t.id?Object.assign(Object.assign({},t),{id:generateTourId()}):t).id&&(e=t.id),r[`${e}`]=t,o=`${e}`}),o}function removeTourFromCollection(e,t){if(e instanceof Array){var r=parseInt(`${t}`,10);if(Number.isNaN(r))throw new Error("Tour is an array, but keys aren't ints!");delete e[r]}else delete e[t]}function setTourInCollection(e,t){if(e instanceof Array){var r=parseInt(`${t.id}`,10);if(Number.isNaN(r))throw new Error("Tour is an array, but keys aren't ints!");e[r]=t}else e[t.id]=t}function getFirstTour(e){if(hasTours(e))return e instanceof Array?e[0]:e[Object.keys(e)[0]]}function getFirstTourKey(e){return e instanceof Array?"0":`${Object.keys(e)[0]}`}function hasTours(e){return 0<getTourCount(e)}function getTourCount(e){return(e instanceof Array?e:Object.keys(e)).length}function getTourIter(e){return e instanceof Array?Array.from(e.entries()):Object.entries(e)}exports.EntityRole=void 0,function(e){e.Viewer="Viewer",e.Collaborator="Collaborator"}(exports.EntityRole||(exports.EntityRole={})),exports.AccountRole=void 0,function(e){e.Owner="Owner",e.Viewer="Viewer",e.Collaborator="Collaborator",e.Admin="Admin"}(exports.AccountRole||(exports.AccountRole={})),exports.InvitationStatus=void 0,function(e){e.Pending="Pending",e.Expired="Expired",e.Accepted="Accepted"}(exports.InvitationStatus||(exports.InvitationStatus={}));const PENDING_REVIEW_ENDPOINT="/repos/:repoOrigin/pr/:pullRequestNumber/pending-review",PENDING_REVIEW_BY_ID_ENDPOINT="/repos/:repoOrigin/pr/:pullRequestNumber/pending-review/:reviewId",REVIEWS_FOR_PR_ENDPOINT="/repos/:repoOrigin/pr/:pullRequestNumber/reviews",THREADS_FOR_PR_ENDPOINT="/repos/:repoOrigin/pr/:pullRequestNumber/threads",REPLY_TO_CODE_REVIEW_THREAD_ENDPOINT="/repos/:repoOrigin/pr/:pullRequestNumber/comment/:commentId/replies",UPDATE_CODE_REVIEW_COMMENT_ENDPOINT="/repos/:repoOrigin/pr/:pullRequestNumber/comment/:commentId",FILE_VIEWED_STATE_ENDPOINT="/repos/:repoOrigin/pr/:pullRequestNumber/viewed",REPOS_ACCOUNT_ENDPOINT="/repos/account/:accountId",REPOS_ACCOUNT_STATUS_ENDPOINT="/repos/account/:accountId/status",REPOS_METADATA_DEPENDENCY_MAP_LATEST_ENDPOINT="/repos/:repoOrigin/dependency_map/metadata/latest",UPDATE_REPO_INSTALL_STATUS_OLD="/repos/:repoOrigin/install-status",UPDATE_REPO_INSTALL_STATUS="/repos/:repoOrigin/account/:accountId/status",UPDATE_REPO_TASK_STATUS="/repos/:repoOrigin/task/:taskType/status",BILLING_ACCOUNTS_BASE="/api/accounts",BILLING_ACCOUNTS_SELF_ENROLL="/self-enroll",BILLING_ACCOUNT_LINK_GITHUB_LOGIN_ENDPOINT="/:accountId/link/github-login/:githubLogin",NOTIFICATIONS_BASE="/api/notifications",NOTIFICATIONS_SUBSCRIBE_ME_ENDPOINT="/diagram/:diagramId/thread/:threadId/subscribe/me",NOTIFICATIONS_SUBSCRIBE_EMAIL_ENDPOINT="/diagram/:diagramId/thread/:threadId/subscribe/email/:email",NOTIFICATIONS_NOTIFY_THREAD_EMAIL_ENDPOINT="/thread/email/:email",NOTIFICATIONS_NOTIFY_THREAD_ENDPOINT="/thread",NOTIFICATIONS_DIAGRAM_KIND_ENDPOINT="/diagram/:diagramId/kind/:kind",NOTIFICATIONS_THREAD_RESOLVE_ENDPOINT="/thread/:threadId/resolve",GITHUB_BASE="/github",GITHUB_ACCOUNTS_TO_INSTALL_FOR_BILLING_ACCOUNT_ENDPOINT="/accounts/to-install/billing-account/:accountId",USER_SETTINGS_ENDPOINT="/user/settings/:settingName",BILLING_ACCOUNT_SETTINGS_ENDPOINT="/billing-account/:billingAccountId/settings/:settingName",TRIGGER_API_ROOT="/api/triggers",TRIGGER_CREATE_ENDPOINT="/billing-account/:billingAccountId",TRIGGER_SINGLE_ENDPOINT="/:triggerId",TRIGGER_LIST_ENDPOINT="/a/:billingAccountId",TRIGGER_HISTORY_ENDPOINT="/:triggerId/history",REPOS_API_ROOT="/api/repos",REPO_COLLABORATORS_ENDPOINT="/:repoOrigin/collaborators",REPO_TEAMS_ENDPOINT="/:repoOrigin/teams",REPO_FILES_ENDPOINT="/billing-account/:billingAccountId/:repoOrigin/files",INVITE_BASE="/api/invites",INVITE_RESEND_ACCOUNT_INVITE="/resend/billing-account/:billingAccountId/users/:userEmail";function generateEncodedPath(e,o={}){return e.replace(/:(\w+)/g,(e,t)=>{var r=o[t];if(null==r)throw new Error(`Missing ${t} parameter`);return encodeURIComponent(r)})}const GITHUB_PREFIX="https://github.com/";function getGitHubRepoDetailsFromOrigin(e){const t=e.substring(GITHUB_PREFIX.length);var[r,e]=t.split("/");return{repoOwner:r,repoName:e,repoOwnerUrl:GITHUB_PREFIX+r}}function repoOriginIsGitHub(e){return e.startsWith(GITHUB_PREFIX)}function getGitHubRepoShortNameFromOrigin(e=""){const{repoName:t,repoOwner:r}=getGitHubRepoDetailsFromOrigin(e);return[r,t].join("/")}exports.GithubAccountType=void 0,function(e){e.User="User",e.Organization="Organization"}(exports.GithubAccountType||(exports.GithubAccountType={})),exports.RepoInstallStatus=void 0,function(e){e.Unknown="Unknown",e.AttentionMergePullRequest="AttentionMergePullRequest",e.Queued="Queued",e.Working="Working",e.Completed="Completed",e.Installed="Installed",e.WarningLongTimeWorking="WarningLongTimeWorking",e.ErrorNeverStarted="ErrorNeverStarted",e.ErrorCompleteButNoData="ErrorCompleteButNoData"}(exports.RepoInstallStatus||(exports.RepoInstallStatus={})),exports.RepoUpdatedInstallStatusErrorCode=void 0,function(e){e.UnableToUseAppOctokit="UnableToUseAppOctokit",e.UnableToQueryGitHub="UnableToQueryGitHub",e.InvalidRepoOrigin="InvalidRepoOrigin"}(exports.RepoUpdatedInstallStatusErrorCode||(exports.RepoUpdatedInstallStatusErrorCode={}));const ROUTES={CHOOSE_UPGRADE_PATH:"/maps/a/:billingAccountId/choose-upgrade-path",CODE_MAPS_INDEX:"/maps/a/:billingAccountId",CODE_MAPS_ROOT:"/maps",CODE_MAP:"/maps/:id",CODE_MAP_PUBLIC:"/maps/public/:id",CONNECT_GITHUB_WIZARD:"/maps/github/new",CREATE_ACCOUNT_WITH_PLAN:"/maps/create-account/:billingPlan",CREATE_ACCOUNT:"/maps/create-account",JOIN_OPEN_ACCOUNTS:"/maps/join-accounts",EDIT_TRIGGER:"/triggers/:triggerId/edit",HOME:"/home",INVITE:"/maps/invite/a/:billingAccountId",NEW_CODE_MAP:"/maps/new",NEW_TRIGGER:"/triggers/a/:billingAccountId/new",REVIEW_MAP_LEGACY:"/maps/pr/:id",REVIEW_MAP:"/maps/review/github/:owner/:repo/pr/:prNumber/:fileName?",REVIEW_MAPS_INDEX:"/reviews/a/:billingAccountId",REVIEW_MAPS_ROOT:"/reviews",SETTINGS_BY_ACCOUNT:"/maps/settings/a/:billingAccountId",SETTINGS:"/maps/settings",SETUP_REVIEW_MAPS:"/maps/review/new",SETUP_ROOT:"/setup",SETUP_INDEX:"/setup/a/:billingAccountId",SHOWCASE:"/maps/community?featured=true",TRIGGERS_INDEX:"/triggers/a/:billingAccountId",TRIGGERS_ROOT:"/triggers",UPGRADE_ACCOUNT:"/maps/a/:billingAccountId/upgrade-account",VIEW_TRIGGER:"/triggers/:triggerId",MICROSOFT_STARTUPS_PROMOTION:"/promo/create-microsoft-for-startups-account",WHY_CODESEE:"/why-codesee",LOGOUT:"/logout",SERVICE_MAPS_ROOT:"/service-maps",SERVICE_MAPS_INDEX:"/service-maps/a/:billingAccountId"};exports.SETTINGS_SUB_ROUTES=void 0,function(e){e.USER_SETTINGS="/my-preferences",e.REPOSITORIES="/repositories",e.ACCOUNT_SETTINGS="/general-settings",e.USERS="/users",e.SUBSCRIPTION_SETTINGS="/subscription-settings"}(exports.SETTINGS_SUB_ROUTES||(exports.SETTINGS_SUB_ROUTES={})),exports.OnboardingChecklist=void 0,function(e){e.CodeSeeOverview="CodeSeeOverview",e.ReviewMapWalkthrough="ReviewMapWalkthrough",e.CreateReviewMapTour="CreateReviewMapTour",e.PowerUpReviewMaps="PowerUpReviewMaps",e.CodebaseMapWalkthrough="CodebaseMapWalkthrough",e.OnboardYourself="OnboardYourself",e.OnboardYourTeam="OnboardYourTeam",e.CreateOwnershipMap="CreateOwnershipMap",e.CreateTechDebtMap="CreateTechDebtMap",e.DownloadVSCodeExtension="DownloadVSCodeExtension",e.CreateFirstTrigger="CreateFirstTrigger",e.UpdateSecuritySettings="UpdateSecuritySettings",e.CustomizeHomePage="CustomizeHomePage"}(exports.OnboardingChecklist||(exports.OnboardingChecklist={}));const UserSetting_OnboardingChecklist_Defaults={[exports.OnboardingChecklist.CodeSeeOverview]:!1,[exports.OnboardingChecklist.ReviewMapWalkthrough]:!1,[exports.OnboardingChecklist.CreateReviewMapTour]:!1,[exports.OnboardingChecklist.PowerUpReviewMaps]:!1,[exports.OnboardingChecklist.CodebaseMapWalkthrough]:!1,[exports.OnboardingChecklist.OnboardYourself]:!1,[exports.OnboardingChecklist.OnboardYourTeam]:!1,[exports.OnboardingChecklist.CreateOwnershipMap]:!1,[exports.OnboardingChecklist.CreateTechDebtMap]:!1,[exports.OnboardingChecklist.DownloadVSCodeExtension]:!1,[exports.OnboardingChecklist.CreateFirstTrigger]:!1,[exports.OnboardingChecklist.UpdateSecuritySettings]:!1,[exports.OnboardingChecklist.CustomizeHomePage]:!1};exports.NavigationPreferences=void 0,function(e){e.DefaultPath="DefaultPath",e.ShowSetupPage="ShowSetupPage"}(exports.NavigationPreferences||(exports.NavigationPreferences={}));const UserSetting_NavigationPreferences_Defaults={[exports.NavigationPreferences.DefaultPath]:ROUTES.SETUP_ROOT,[exports.NavigationPreferences.ShowSetupPage]:!0};exports.UserSettingName=void 0,function(e){e.OnboardingChecklist="OnboardingChecklist",e.NavigationPreferences="NavigationPreferences"}(exports.UserSettingName||(exports.UserSettingName={})),exports.BillingAccountSettingName=void 0,function(e){e.DomainSettings="DomainSettings",e.MapShareSettings="MapShareSettings",e.SignIn="SignIn"}(exports.BillingAccountSettingName||(exports.BillingAccountSettingName={}));const BillingAccountSetting_DomainSettings_Defaults={allowedDomains:[],restrictAccountInvites:!1,allowSelfEnrollment:!1},BillingAccountSetting_MapShareSettings_Defaults={allowPublicMaps:!0},BillingAccountSetting_SignIn_Defaults={ssoRequired:!1};function collectActionsByKindAndTriggerId(e){const t={};for(const n of e){var{kind:r,triggerId:o}=n;const i=t[r]||{};o in i?i[o].push(n):i[o]=[n],t[r]=i}return t}function createGlobMatcher(e){const t=new minimatch.Minimatch(e,{dot:!0,nocomment:!0});return t.match.bind(t)}function createFilterForFileAddedInFolder(t,r){return e=>e.changeType===FileChangeType.Added&&filePathMatchesConditionForAddedInFolder(e.filepath,t,r)}function filePathMatchesConditionForAddedInFolder(e,t,r){const o=e.split("/"),n=o.slice(0,o.length-1).join("/");let i=r;switch(i.endsWith("/")&&(i=i.substring(0,i.length-1)),t){case exports.TriggerConditionOperator.Equals:return n===i;case exports.TriggerConditionOperator.Contains:return n.includes(i);case exports.TriggerConditionOperator.StartsWith:return n.startsWith(i);case exports.TriggerConditionOperator.EndsWith:return n.endsWith(i);case exports.TriggerConditionOperator.MatchesGlob:const s=createGlobMatcher((r.endsWith("/")?r:r+"/")+"**");return s(e);default:return!1}}function createFileNameFilterForFileChange(t,r){return e=>{e=fileNameFromFilePath(e.filepath);return createFileNameFilter(t,r)(e)}}function createFileNameFilter(t,r){return e=>fileNameMatchesCondition(e,t,r)}function fileNameMatchesCondition(e,t,r){switch(t){case exports.TriggerConditionOperator.Equals:return e===r;case exports.TriggerConditionOperator.Contains:return e.includes(r);case exports.TriggerConditionOperator.EndsWith:return e.endsWith(r);case exports.TriggerConditionOperator.MatchesGlob:const o=createGlobMatcher(r);return o(e);case exports.TriggerConditionOperator.StartsWith:return e.startsWith(r);default:return!1}}function filePathMatchesConditionForFileName(e,t,r){return fileNameMatchesCondition(fileNameFromFilePath(e),t,r)}function fileNameFromFilePath(e){e=e.split("/");return e[e.length-1]}function createFilterForFilePath(t,r){return e=>createFilePathFilter(t,r)(e.filepath)}function createFilePathFilter(t,r){return e=>filePathMatchesCondition$1(e,t,r)}function filePathMatchesCondition$1(e,t,r){switch(t){case exports.TriggerConditionOperator.Equals:return e===r;case exports.TriggerConditionOperator.Contains:return e.includes(r);case exports.TriggerConditionOperator.EndsWith:return e.endsWith(r);case exports.TriggerConditionOperator.MatchesGlob:const o=createGlobMatcher(r);return o(e);case exports.TriggerConditionOperator.StartsWith:return e.startsWith(r);default:return!1}}function filePathMatchesConditionForFilePath(e,t,r){return filePathMatchesCondition$1(e,t,r)}function getTriggersAffectedByFileChanges(t,e){return e.filter(e=>isTriggerAffectedByFileChanges(t,e))}function isTriggerAffectedByFileChanges(e,t){let r=e;return t.conditions.forEach(e=>{e=filterFileChangeForCondition(e);r=r.filter(e)}),0<r.length}function filterFileChangeForCondition(e){var{field:e,operator:t,value:r}=e;switch(e){case exports.TriggerConditionField.FileAddedInFolder:return createFilterForFileAddedInFolder(t,r);case exports.TriggerConditionField.FileName:return createFileNameFilterForFileChange(t,r);case exports.TriggerConditionField.FilePath:return createFilterForFilePath(t,r);default:exports.TriggerConditionField.FileContents;throw new Error("Not Implemented")}}function filePathMatchesCondition(e,t){var{field:t,operator:r,value:o}=t;switch(t){case exports.TriggerConditionField.FileName:return filePathMatchesConditionForFileName(e,r,o);case exports.TriggerConditionField.FileAddedInFolder:return filePathMatchesConditionForAddedInFolder(e,r,o);case exports.TriggerConditionField.FilePath:return filePathMatchesConditionForFilePath(e,r,o);default:exports.TriggerConditionField.FileContents;throw new Error("Not Implemented")}}function triggerFromDbRow(e,t){return{id:e.id,billingAccountId:e.billing_account_id,repoOrigin:e.repo_origin,name:e.name,enabled:e.enabled,applyToDrafts:e.apply_to_drafts,conditions:e.conditions,actions:e.actions,authorIsCurrentUser:e.user_id===t,createdAt:e.created.toISOString()}}function githubFileToTriggerFileChange(e){return{filepath:e.filename,changeType:e.status,patch:e.patch?[e.patch]:[]}}const allActionsSentinel="*";exports.Promotion=void 0,(exports.Promotion||(exports.Promotion={})).MicrosoftStartups="microsoft-startups",exports.ArchDiagram=ArchDiagram,exports.ArchDiagramServerAdaptor=ArchDiagramServerAdaptor,exports.BILLING_ACCOUNTS_BASE=BILLING_ACCOUNTS_BASE,exports.BILLING_ACCOUNTS_SELF_ENROLL=BILLING_ACCOUNTS_SELF_ENROLL,exports.BILLING_ACCOUNT_LINK_GITHUB_LOGIN_ENDPOINT=BILLING_ACCOUNT_LINK_GITHUB_LOGIN_ENDPOINT,exports.BILLING_ACCOUNT_SETTINGS_ENDPOINT=BILLING_ACCOUNT_SETTINGS_ENDPOINT,exports.BillingAccountSetting_DomainSettings_Defaults=BillingAccountSetting_DomainSettings_Defaults,exports.BillingAccountSetting_MapShareSettings_Defaults=BillingAccountSetting_MapShareSettings_Defaults,exports.BillingAccountSetting_SignIn_Defaults=BillingAccountSetting_SignIn_Defaults,exports.BillingPlanUnlimitedSeats=BillingPlanUnlimitedSeats,exports.DefaultTotalSeatsForPlan=DefaultTotalSeatsForPlan,exports.EARLY_ADOPTER_PROVISIONED_SEATS=EARLY_ADOPTER_PROVISIONED_SEATS,exports.FILE_VIEWED_STATE_ENDPOINT=FILE_VIEWED_STATE_ENDPOINT,exports.FileChangeType=FileChangeType,exports.GITHUB_ACCOUNTS_TO_INSTALL_FOR_BILLING_ACCOUNT_ENDPOINT=GITHUB_ACCOUNTS_TO_INSTALL_FOR_BILLING_ACCOUNT_ENDPOINT,exports.GITHUB_BASE=GITHUB_BASE,exports.INVITE_BASE=INVITE_BASE,exports.INVITE_RESEND_ACCOUNT_INVITE=INVITE_RESEND_ACCOUNT_INVITE,exports.MALFORMED_REQUEST=MALFORMED_REQUEST,exports.MICROSOFT_STARTUPS_PROVISIONED_SEATS=MICROSOFT_STARTUPS_PROVISIONED_SEATS,exports.MaxTotalSeatsForPlan=MaxTotalSeatsForPlan,exports.NOTIFICATIONS_BASE=NOTIFICATIONS_BASE,exports.NOTIFICATIONS_DIAGRAM_KIND_ENDPOINT=NOTIFICATIONS_DIAGRAM_KIND_ENDPOINT,exports.NOTIFICATIONS_NOTIFY_THREAD_EMAIL_ENDPOINT=NOTIFICATIONS_NOTIFY_THREAD_EMAIL_ENDPOINT,exports.NOTIFICATIONS_NOTIFY_THREAD_ENDPOINT=NOTIFICATIONS_NOTIFY_THREAD_ENDPOINT,exports.NOTIFICATIONS_SUBSCRIBE_EMAIL_ENDPOINT=NOTIFICATIONS_SUBSCRIBE_EMAIL_ENDPOINT,exports.NOTIFICATIONS_SUBSCRIBE_ME_ENDPOINT=NOTIFICATIONS_SUBSCRIBE_ME_ENDPOINT,exports.NOTIFICATIONS_THREAD_RESOLVE_ENDPOINT=NOTIFICATIONS_THREAD_RESOLVE_ENDPOINT,exports.PENDING_REVIEW_BY_ID_ENDPOINT=PENDING_REVIEW_BY_ID_ENDPOINT,exports.PENDING_REVIEW_ENDPOINT=PENDING_REVIEW_ENDPOINT,exports.REPLY_TO_CODE_REVIEW_THREAD_ENDPOINT=REPLY_TO_CODE_REVIEW_THREAD_ENDPOINT,exports.REPOS_ACCOUNT_ENDPOINT=REPOS_ACCOUNT_ENDPOINT,exports.REPOS_ACCOUNT_STATUS_ENDPOINT=REPOS_ACCOUNT_STATUS_ENDPOINT,exports.REPOS_API_ROOT=REPOS_API_ROOT,exports.REPOS_METADATA_DEPENDENCY_MAP_LATEST_ENDPOINT=REPOS_METADATA_DEPENDENCY_MAP_LATEST_ENDPOINT,exports.REPO_COLLABORATORS_ENDPOINT=REPO_COLLABORATORS_ENDPOINT,exports.REPO_FILES_ENDPOINT=REPO_FILES_ENDPOINT,exports.REPO_TEAMS_ENDPOINT=REPO_TEAMS_ENDPOINT,exports.REVIEWS_FOR_PR_ENDPOINT=REVIEWS_FOR_PR_ENDPOINT,exports.ROUTES=ROUTES,exports.SubscriptionStatusGoodStanding=SubscriptionStatusGoodStanding,exports.SubscriptionStatusNeedsAttention=SubscriptionStatusNeedsAttention,exports.THREADS_FOR_PR_ENDPOINT=THREADS_FOR_PR_ENDPOINT,exports.TRIGGER_API_ROOT=TRIGGER_API_ROOT,exports.TRIGGER_CREATE_ENDPOINT=TRIGGER_CREATE_ENDPOINT,exports.TRIGGER_HISTORY_ENDPOINT=TRIGGER_HISTORY_ENDPOINT,exports.TRIGGER_LIST_ENDPOINT=TRIGGER_LIST_ENDPOINT,exports.TRIGGER_SINGLE_ENDPOINT=TRIGGER_SINGLE_ENDPOINT,exports.UNLIMITED_AMOUNT_OF_TRIGGERS=UNLIMITED_AMOUNT_OF_TRIGGERS,exports.UPDATE_CODE_REVIEW_COMMENT_ENDPOINT=UPDATE_CODE_REVIEW_COMMENT_ENDPOINT,exports.UPDATE_REPO_INSTALL_STATUS=UPDATE_REPO_INSTALL_STATUS,exports.UPDATE_REPO_INSTALL_STATUS_OLD=UPDATE_REPO_INSTALL_STATUS_OLD,exports.UPDATE_REPO_TASK_STATUS=UPDATE_REPO_TASK_STATUS,exports.USER_SETTINGS_ENDPOINT=USER_SETTINGS_ENDPOINT,exports.UserSetting_NavigationPreferences_Defaults=UserSetting_NavigationPreferences_Defaults,exports.UserSetting_OnboardingChecklist_Defaults=UserSetting_OnboardingChecklist_Defaults,exports.addToursToCollection=addToursToCollection,exports.allActionsSentinel=allActionsSentinel,exports.collectActionsByKindAndTriggerId=collectActionsByKindAndTriggerId,exports.computeFullDependencyMapFromIncrementalDependencyMap=computeFullDependencyMapFromIncrementalDependencyMap,exports.dirnameOrUndefined=dirnameOrUndefined,exports.filePathMatchesCondition=filePathMatchesCondition,exports.generateEncodedPath=generateEncodedPath,exports.generateTourId=generateTourId,exports.getDiagramDataFromChangeSetAndDependencyMap=getDiagramDataFromChangeSetAndDependencyMap,exports.getFirstTour=getFirstTour,exports.getFirstTourKey=getFirstTourKey,exports.getGitHubRepoDetailsFromOrigin=getGitHubRepoDetailsFromOrigin,exports.getGitHubRepoShortNameFromOrigin=getGitHubRepoShortNameFromOrigin,exports.getLinksDiff=getLinksDiff,exports.getMaxAmountOfTriggersForPlan=getMaxAmountOfTriggersForPlan,exports.getTourCount=getTourCount,exports.getTourFromCollection=getTourFromCollection,exports.getTourIter=getTourIter,exports.getTriggersAffectedByFileChanges=getTriggersAffectedByFileChanges,exports.githubFileToTriggerFileChange=githubFileToTriggerFileChange,exports.hasSecurityFeatures=hasSecurityFeatures,exports.hasTours=hasTours,exports.isFeatureOnPlan=isFeatureOnPlan,exports.mergeChangeSetAndDependencyMap=mergeChangeSetAndDependencyMap,exports.normalizeFilename=normalizeFilename,exports.parseFileChangeSet=parseFileChangeSet,exports.plansWithFeature=plansWithFeature,exports.removeTourFromCollection=removeTourFromCollection,exports.repoOriginIsGitHub=repoOriginIsGitHub,exports.setTourInCollection=setTourInCollection,exports.sortLinks=sortLinks,exports.sortNodes=sortNodes,exports.sortPackageNamePaths=sortPackageNamePaths,exports.triggerFromDbRow=triggerFromDbRow,exports.versionMeetsOrExceedsMinimum=versionMeetsOrExceedsMinimum;
