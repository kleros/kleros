import type { ArchDiagramLink } from "../ArchDiagram";
import type { PackageNamePath } from "../types";
/**
 * versionMeetsOrExceedsMinimum returns true if `dependencyMapVersion`
 * is greater than or equal to `minimumVersion` after casting
 * `dependencyMapVersion` to a Number. Note that, if
 * `dependencyMapVersion` is undefined, this always returns false.
 *
 * @param {string | undefined} dependencyMapVersion the version
 *   attribute from a dependency map
 * @param {number} minimumVersion the minimum version desired
 *
 * @returns true if the input dependency map version is greater
 *   than or equal to the supplied minimum version, false
 *   otherwise.
 */
export declare function versionMeetsOrExceedsMinimum(dependencyMapVersion: string | undefined, minimumVersion: number): boolean;
/**
 * NodeLike is a convenience interface to handle any thing that
 * looks like a "node", to wit, anything with a `key` attribute.
 */
interface NodeLike {
    key: string;
}
/**
 * sortNodes sorts a list of NodeLikes in place by key. Here
 * NodeLike means anything with a `key` attribute.
 *
 * It also returns the sorted list for symmetry with the built
 * in `Array.prototype.sort`
 *
 * @param {NodeLike[]} nodes
 *
 * @returns {NodeLike[]} the input nodes array sorted
 */
export declare function sortNodes(nodes: NodeLike[]): NodeLike[];
/**
 * sortLinks sorts a list of ArchDiagramLinks in place by
 * each link's `from` field. If the `from` field of each
 * link is identical, it sorts based on the `to` field.
 *
 * It also returns the sorted list for symmetry with the
 * built in `Array.prototype.sort`
 *
 * @param {ArchDiagramLink[]} links
 *
 * @returns {ArchDiagramLink[]} input list of ArchDiagramLinks sorted
 */
export declare function sortLinks(links: ArchDiagramLink[]): ArchDiagramLink[];
/**
 * sortPackageNamePaths sorts a list of packageNamePath
 * entries in place.
 *
 * It also returns the sorted list for symmetry with the
 * built in `Array.prototype.sort`
 *
 * @param {PackageNamePath[]} packageNamePaths
 *
 * @returns {PackageNamePath[]} input list of
 *   PackageNamePaths sorted
 */
export declare function sortPackageNamePaths(packageNamePaths: PackageNamePath[]): PackageNamePath[];
export {};
