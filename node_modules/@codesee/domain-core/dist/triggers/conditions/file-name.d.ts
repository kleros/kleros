import { TriggerConditionOperator } from "../../endpointTypes/triggers";
import { FileChangeMatcher } from "../types";
export declare function createFileNameFilterForFileChange(operator: TriggerConditionOperator, value: string): FileChangeMatcher;
declare type FilterFunction = (fileName: string) => boolean;
export declare function createFileNameFilter(operator: TriggerConditionOperator, value: string): FilterFunction;
export declare function fileNameMatchesCondition(fileName: string, triggerOperator: TriggerConditionOperator, triggerValue: string): boolean;
/**
 * Returns `true` if the file's NAME matches the operator and value of the
 * Trigger.
 *
 * Important: this only looks at the file's NAME, not the file's PATH. If you
 * pass a path like `src/folder/file.ts`, this function only looks at `file.ts`.
 *
 * @example filePathMatchesConditionForFileName(
 *   "src/components/Button.tsx",
 *   TriggerConditionOperator.Equals,
 *   "Button.tsx"
 * );
 * // true
 *
 * @example filePathMatchesConditionForFileName(
 *   "src/components/Button.tsx",
 *   TriggerConditionOperator.MatchesGlob,
 *   "*.tsx"
 * );
 * // true
 *
 * @example filePathMatchesConditionForFileName(
 *   "src/components/Button.tsx",
 *   TriggerConditionOperator.MatchesGlob,
 *   "components/*.tsx"
 * );
 * // false
 */
export declare function filePathMatchesConditionForFileName(filePath: string, triggerOperator: TriggerConditionOperator, triggerValue: string): boolean;
export {};
