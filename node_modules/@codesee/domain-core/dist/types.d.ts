import { ArchDiagramNode } from "./ArchDiagram";
export declare type PackageNamePath = [string, string];
export declare type Node = {
    key: string;
    name?: string;
    packageName?: string;
    labelKey?: string;
    group?: string;
    isGroup?: boolean;
    isSubGraphExpanded?: boolean;
};
export declare type Link = {
    from: string;
    to: string;
};
export declare type LostData = {
    [iteration: number]: LostDataFromIteration;
};
export declare type LostDataFromIteration = {
    iteration: number;
    gitCommit: string;
    timestamp: string;
    nodes: ArchDiagramNode[];
};
export declare type ArchDiagramRawData = {
    version: string;
    packageName?: string;
    commitHash: string;
    configuration?: string;
    packageNamePaths: PackageNamePath[];
    nodes: Node[];
    links: Link[];
};
/**
 * Because Redux doesn't like maps because they are not directly
 * serializable, to use a map that will be destined for redux, we
 * need to use this type.
 */
export declare type GenericMap<T> = {
    [key: string]: T;
};
