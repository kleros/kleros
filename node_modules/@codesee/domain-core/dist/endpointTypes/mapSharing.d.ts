import { ActiveMember, EntityRole, InvitedMember, AccountRole } from "../shareTypes";
export declare type PrivateEntityRole = EntityRole | null;
export declare type PublicEntityRole = Exclude<EntityRole, "Collaborator"> | null;
/**
 * Representation of how a diagram is shared between an owner, members, groups,
 * and on a global level.
 */
export declare type DiagramSharingSettings = {
    globalPermissions: {
        /**
         * Sharing permissions for the CodeSee organization that owns this diagram
         */
        org: {
            name: string;
            entityRole: EntityRole | null;
        };
        /**
         * Sharing permissions for the GitHub organization linked to this diagram
         */
        sourceHost: {
            name: string;
            entityRole: PublicEntityRole;
        };
        /**
         * Sharing permissions for everyone on the internet
         */
        everyone: PublicEntityRole;
    };
    /**
     * The list of members who have access to this diagram.
     */
    members: DiagramMember[];
    /**
     * The owner of this diagram
     */
    owner: DiagramOwner;
};
export declare type DiagramInvitedMember = InvitedMember<{
    entityRole: EntityRole;
    accountRole: AccountRole | null;
}>;
export declare type DiagramActiveMember = ActiveMember<{
    entityRole: EntityRole;
    accountRole: AccountRole | null;
}>;
export declare type DiagramMember = DiagramInvitedMember | DiagramActiveMember;
export declare type DiagramOwner = {
    email: string;
    firstName?: string;
    lastName?: string;
    avatarUrl?: string;
};
/**
 * Payload to update a diagram's global sharing settings
 * @see maps-api-share.ts
 */
export declare type SetGlobalSharingSettingsPayload = {
    org: EntityRole | null;
    sourceHost: PublicEntityRole;
    everyone: PublicEntityRole;
};
/**
 * Payload to add a list of members to a diagram's sharing settings
 * @see maps-api-share.ts
 */
export declare type AddMembersToDiagramPayload = {
    entityRole: EntityRole;
    userEmails: string[];
};
