"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.detectEnvironment = exports.Environments = void 0;
const object_path_1 = require("object-path");
const semver_1 = require("semver");
const util_1 = require("./util");
exports.Environments = {
    CreateReactAppV1: "CreateReactAppV1",
    CreateReactAppV2: "CreateReactAppV2",
    CreateReactAppV3: "CreateReactAppV3",
    CreateReactAppV4: "CreateReactAppV4",
    Unknown: "Unknown",
};
async function detectEnvironment() {
    const pkg = await util_1.projectPackageJson();
    // Create React App
    const reactScriptsVersionConstraint = object_path_1.get(pkg, "dependencies.react-scripts", null);
    if (reactScriptsVersionConstraint) {
        const reactScriptsVersion = semver_1.parse(semver_1.minVersion(reactScriptsVersionConstraint));
        if ((reactScriptsVersion === null || reactScriptsVersion === void 0 ? void 0 : reactScriptsVersion.major) === 4) {
            return exports.Environments.CreateReactAppV4;
        }
        else if ((reactScriptsVersion === null || reactScriptsVersion === void 0 ? void 0 : reactScriptsVersion.major) === 3) {
            return exports.Environments.CreateReactAppV3;
        }
        else if ((reactScriptsVersion === null || reactScriptsVersion === void 0 ? void 0 : reactScriptsVersion.major) === 2) {
            return exports.Environments.CreateReactAppV2;
        }
        else if ((reactScriptsVersion === null || reactScriptsVersion === void 0 ? void 0 : reactScriptsVersion.major) === 1) {
            return exports.Environments.CreateReactAppV1;
        }
    }
    // By default, we'll return Unknown.
    return exports.Environments.Unknown;
}
exports.detectEnvironment = detectEnvironment;
